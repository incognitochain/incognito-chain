// protoc zksnark.proto --go_out=plugins=grpc:zksnark
// protoc zksnark.proto --cpp_out=.
// protoc zksnark.proto --grpc_out=. --plugin=protoc-gen-grpc=`which grpc_cpp_plugin`
syntax = "proto3";

package zksnark;

service Zksnark {
    rpc Prove(ProveRequest) returns (ProveReply) {}
}

message MerkleHash {
    bytes hash = 1;
}

message MerklePath {
    repeated MerkleHash authPath = 1;
    repeated bool index = 2;
}

message Note {
    uint64 value = 1;
    bytes cm = 2;  // 32 bytes
    bytes r = 3;
    bytes rho = 4;
    bytes apk = 5;
    bytes nf = 6;
}

message JSInput {
    MerklePath witnessPath = 1;
    bytes spendingKey = 2;
    Note note = 3;
}

message ProveRequest {
    repeated JSInput inputs = 1;
    repeated Note outNotes = 2;
    bytes hsig = 3;
    bytes phi = 4;
    bytes rt = 5;
}

message ProveReply {
    string dummy = 1;
}
