// Code generated by protoc-gen-go. DO NOT EDIT.
// source: zksnark.proto

package zksnark

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MerkleHash struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MerkleHash) Reset()         { *m = MerkleHash{} }
func (m *MerkleHash) String() string { return proto.CompactTextString(m) }
func (*MerkleHash) ProtoMessage()    {}
func (*MerkleHash) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksnark_90fd8aeebdcddbe0, []int{0}
}
func (m *MerkleHash) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerkleHash.Unmarshal(m, b)
}
func (m *MerkleHash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerkleHash.Marshal(b, m, deterministic)
}
func (dst *MerkleHash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerkleHash.Merge(dst, src)
}
func (m *MerkleHash) XXX_Size() int {
	return xxx_messageInfo_MerkleHash.Size(m)
}
func (m *MerkleHash) XXX_DiscardUnknown() {
	xxx_messageInfo_MerkleHash.DiscardUnknown(m)
}

var xxx_messageInfo_MerkleHash proto.InternalMessageInfo

func (m *MerkleHash) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type MerklePath struct {
	AuthPath             []*MerkleHash `protobuf:"bytes,1,rep,name=authPath,proto3" json:"authPath,omitempty"`
	Index                []bool        `protobuf:"varint,2,rep,packed,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MerklePath) Reset()         { *m = MerklePath{} }
func (m *MerklePath) String() string { return proto.CompactTextString(m) }
func (*MerklePath) ProtoMessage()    {}
func (*MerklePath) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksnark_90fd8aeebdcddbe0, []int{1}
}
func (m *MerklePath) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerklePath.Unmarshal(m, b)
}
func (m *MerklePath) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerklePath.Marshal(b, m, deterministic)
}
func (dst *MerklePath) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerklePath.Merge(dst, src)
}
func (m *MerklePath) XXX_Size() int {
	return xxx_messageInfo_MerklePath.Size(m)
}
func (m *MerklePath) XXX_DiscardUnknown() {
	xxx_messageInfo_MerklePath.DiscardUnknown(m)
}

var xxx_messageInfo_MerklePath proto.InternalMessageInfo

func (m *MerklePath) GetAuthPath() []*MerkleHash {
	if m != nil {
		return m.AuthPath
	}
	return nil
}

func (m *MerklePath) GetIndex() []bool {
	if m != nil {
		return m.Index
	}
	return nil
}

type Note struct {
	Value                uint64   `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Cm                   []byte   `protobuf:"bytes,2,opt,name=cm,proto3" json:"cm,omitempty"`
	R                    []byte   `protobuf:"bytes,3,opt,name=r,proto3" json:"r,omitempty"`
	Rho                  []byte   `protobuf:"bytes,4,opt,name=rho,proto3" json:"rho,omitempty"`
	Apk                  []byte   `protobuf:"bytes,5,opt,name=apk,proto3" json:"apk,omitempty"`
	Nf                   []byte   `protobuf:"bytes,6,opt,name=nf,proto3" json:"nf,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Note) Reset()         { *m = Note{} }
func (m *Note) String() string { return proto.CompactTextString(m) }
func (*Note) ProtoMessage()    {}
func (*Note) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksnark_90fd8aeebdcddbe0, []int{2}
}
func (m *Note) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Note.Unmarshal(m, b)
}
func (m *Note) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Note.Marshal(b, m, deterministic)
}
func (dst *Note) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Note.Merge(dst, src)
}
func (m *Note) XXX_Size() int {
	return xxx_messageInfo_Note.Size(m)
}
func (m *Note) XXX_DiscardUnknown() {
	xxx_messageInfo_Note.DiscardUnknown(m)
}

var xxx_messageInfo_Note proto.InternalMessageInfo

func (m *Note) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Note) GetCm() []byte {
	if m != nil {
		return m.Cm
	}
	return nil
}

func (m *Note) GetR() []byte {
	if m != nil {
		return m.R
	}
	return nil
}

func (m *Note) GetRho() []byte {
	if m != nil {
		return m.Rho
	}
	return nil
}

func (m *Note) GetApk() []byte {
	if m != nil {
		return m.Apk
	}
	return nil
}

func (m *Note) GetNf() []byte {
	if m != nil {
		return m.Nf
	}
	return nil
}

type JSInput struct {
	WitnessPath          *MerklePath `protobuf:"bytes,1,opt,name=witnessPath,proto3" json:"witnessPath,omitempty"`
	SpendingKey          []byte      `protobuf:"bytes,2,opt,name=spendingKey,proto3" json:"spendingKey,omitempty"`
	Note                 *Note       `protobuf:"bytes,3,opt,name=note,proto3" json:"note,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *JSInput) Reset()         { *m = JSInput{} }
func (m *JSInput) String() string { return proto.CompactTextString(m) }
func (*JSInput) ProtoMessage()    {}
func (*JSInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksnark_90fd8aeebdcddbe0, []int{3}
}
func (m *JSInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JSInput.Unmarshal(m, b)
}
func (m *JSInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JSInput.Marshal(b, m, deterministic)
}
func (dst *JSInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JSInput.Merge(dst, src)
}
func (m *JSInput) XXX_Size() int {
	return xxx_messageInfo_JSInput.Size(m)
}
func (m *JSInput) XXX_DiscardUnknown() {
	xxx_messageInfo_JSInput.DiscardUnknown(m)
}

var xxx_messageInfo_JSInput proto.InternalMessageInfo

func (m *JSInput) GetWitnessPath() *MerklePath {
	if m != nil {
		return m.WitnessPath
	}
	return nil
}

func (m *JSInput) GetSpendingKey() []byte {
	if m != nil {
		return m.SpendingKey
	}
	return nil
}

func (m *JSInput) GetNote() *Note {
	if m != nil {
		return m.Note
	}
	return nil
}

type ProveRequest struct {
	Inputs               []*JSInput `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty"`
	OutNotes             []*Note    `protobuf:"bytes,2,rep,name=outNotes,proto3" json:"outNotes,omitempty"`
	Hsig                 []byte     `protobuf:"bytes,3,opt,name=hsig,proto3" json:"hsig,omitempty"`
	Phi                  []byte     `protobuf:"bytes,4,opt,name=phi,proto3" json:"phi,omitempty"`
	Rt                   []byte     `protobuf:"bytes,5,opt,name=rt,proto3" json:"rt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ProveRequest) Reset()         { *m = ProveRequest{} }
func (m *ProveRequest) String() string { return proto.CompactTextString(m) }
func (*ProveRequest) ProtoMessage()    {}
func (*ProveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksnark_90fd8aeebdcddbe0, []int{4}
}
func (m *ProveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProveRequest.Unmarshal(m, b)
}
func (m *ProveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProveRequest.Marshal(b, m, deterministic)
}
func (dst *ProveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProveRequest.Merge(dst, src)
}
func (m *ProveRequest) XXX_Size() int {
	return xxx_messageInfo_ProveRequest.Size(m)
}
func (m *ProveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProveRequest proto.InternalMessageInfo

func (m *ProveRequest) GetInputs() []*JSInput {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *ProveRequest) GetOutNotes() []*Note {
	if m != nil {
		return m.OutNotes
	}
	return nil
}

func (m *ProveRequest) GetHsig() []byte {
	if m != nil {
		return m.Hsig
	}
	return nil
}

func (m *ProveRequest) GetPhi() []byte {
	if m != nil {
		return m.Phi
	}
	return nil
}

func (m *ProveRequest) GetRt() []byte {
	if m != nil {
		return m.Rt
	}
	return nil
}

type PHGRProof struct {
	G_A                  []byte   `protobuf:"bytes,1,opt,name=g_A,json=gA,proto3" json:"g_A,omitempty"`
	G_APrime             []byte   `protobuf:"bytes,2,opt,name=g_A_prime,json=gAPrime,proto3" json:"g_A_prime,omitempty"`
	G_B                  []byte   `protobuf:"bytes,3,opt,name=g_B,json=gB,proto3" json:"g_B,omitempty"`
	G_BPrime             []byte   `protobuf:"bytes,4,opt,name=g_B_prime,json=gBPrime,proto3" json:"g_B_prime,omitempty"`
	G_C                  []byte   `protobuf:"bytes,5,opt,name=g_C,json=gC,proto3" json:"g_C,omitempty"`
	G_CPrime             []byte   `protobuf:"bytes,6,opt,name=g_C_prime,json=gCPrime,proto3" json:"g_C_prime,omitempty"`
	G_K                  []byte   `protobuf:"bytes,7,opt,name=g_K,json=gK,proto3" json:"g_K,omitempty"`
	G_H                  []byte   `protobuf:"bytes,8,opt,name=g_H,json=gH,proto3" json:"g_H,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PHGRProof) Reset()         { *m = PHGRProof{} }
func (m *PHGRProof) String() string { return proto.CompactTextString(m) }
func (*PHGRProof) ProtoMessage()    {}
func (*PHGRProof) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksnark_90fd8aeebdcddbe0, []int{5}
}
func (m *PHGRProof) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PHGRProof.Unmarshal(m, b)
}
func (m *PHGRProof) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PHGRProof.Marshal(b, m, deterministic)
}
func (dst *PHGRProof) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PHGRProof.Merge(dst, src)
}
func (m *PHGRProof) XXX_Size() int {
	return xxx_messageInfo_PHGRProof.Size(m)
}
func (m *PHGRProof) XXX_DiscardUnknown() {
	xxx_messageInfo_PHGRProof.DiscardUnknown(m)
}

var xxx_messageInfo_PHGRProof proto.InternalMessageInfo

func (m *PHGRProof) GetG_A() []byte {
	if m != nil {
		return m.G_A
	}
	return nil
}

func (m *PHGRProof) GetG_APrime() []byte {
	if m != nil {
		return m.G_APrime
	}
	return nil
}

func (m *PHGRProof) GetG_B() []byte {
	if m != nil {
		return m.G_B
	}
	return nil
}

func (m *PHGRProof) GetG_BPrime() []byte {
	if m != nil {
		return m.G_BPrime
	}
	return nil
}

func (m *PHGRProof) GetG_C() []byte {
	if m != nil {
		return m.G_C
	}
	return nil
}

func (m *PHGRProof) GetG_CPrime() []byte {
	if m != nil {
		return m.G_CPrime
	}
	return nil
}

func (m *PHGRProof) GetG_K() []byte {
	if m != nil {
		return m.G_K
	}
	return nil
}

func (m *PHGRProof) GetG_H() []byte {
	if m != nil {
		return m.G_H
	}
	return nil
}

type ProveReply struct {
	Proof                *PHGRProof `protobuf:"bytes,1,opt,name=proof,proto3" json:"proof,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ProveReply) Reset()         { *m = ProveReply{} }
func (m *ProveReply) String() string { return proto.CompactTextString(m) }
func (*ProveReply) ProtoMessage()    {}
func (*ProveReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksnark_90fd8aeebdcddbe0, []int{6}
}
func (m *ProveReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProveReply.Unmarshal(m, b)
}
func (m *ProveReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProveReply.Marshal(b, m, deterministic)
}
func (dst *ProveReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProveReply.Merge(dst, src)
}
func (m *ProveReply) XXX_Size() int {
	return xxx_messageInfo_ProveReply.Size(m)
}
func (m *ProveReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ProveReply.DiscardUnknown(m)
}

var xxx_messageInfo_ProveReply proto.InternalMessageInfo

func (m *ProveReply) GetProof() *PHGRProof {
	if m != nil {
		return m.Proof
	}
	return nil
}

type VerifyRequest struct {
	Proof                *PHGRProof `protobuf:"bytes,1,opt,name=proof,proto3" json:"proof,omitempty"`
	Hsig                 []byte     `protobuf:"bytes,2,opt,name=hsig,proto3" json:"hsig,omitempty"`
	Rt                   []byte     `protobuf:"bytes,3,opt,name=rt,proto3" json:"rt,omitempty"`
	Nullifiers           [][]byte   `protobuf:"bytes,4,rep,name=nullifiers,proto3" json:"nullifiers,omitempty"`
	Commits              [][]byte   `protobuf:"bytes,5,rep,name=commits,proto3" json:"commits,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *VerifyRequest) Reset()         { *m = VerifyRequest{} }
func (m *VerifyRequest) String() string { return proto.CompactTextString(m) }
func (*VerifyRequest) ProtoMessage()    {}
func (*VerifyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksnark_90fd8aeebdcddbe0, []int{7}
}
func (m *VerifyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyRequest.Unmarshal(m, b)
}
func (m *VerifyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyRequest.Marshal(b, m, deterministic)
}
func (dst *VerifyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyRequest.Merge(dst, src)
}
func (m *VerifyRequest) XXX_Size() int {
	return xxx_messageInfo_VerifyRequest.Size(m)
}
func (m *VerifyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyRequest proto.InternalMessageInfo

func (m *VerifyRequest) GetProof() *PHGRProof {
	if m != nil {
		return m.Proof
	}
	return nil
}

func (m *VerifyRequest) GetHsig() []byte {
	if m != nil {
		return m.Hsig
	}
	return nil
}

func (m *VerifyRequest) GetRt() []byte {
	if m != nil {
		return m.Rt
	}
	return nil
}

func (m *VerifyRequest) GetNullifiers() [][]byte {
	if m != nil {
		return m.Nullifiers
	}
	return nil
}

func (m *VerifyRequest) GetCommits() [][]byte {
	if m != nil {
		return m.Commits
	}
	return nil
}

type VerifyReply struct {
	Valid                bool     `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyReply) Reset()         { *m = VerifyReply{} }
func (m *VerifyReply) String() string { return proto.CompactTextString(m) }
func (*VerifyReply) ProtoMessage()    {}
func (*VerifyReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_zksnark_90fd8aeebdcddbe0, []int{8}
}
func (m *VerifyReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyReply.Unmarshal(m, b)
}
func (m *VerifyReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyReply.Marshal(b, m, deterministic)
}
func (dst *VerifyReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyReply.Merge(dst, src)
}
func (m *VerifyReply) XXX_Size() int {
	return xxx_messageInfo_VerifyReply.Size(m)
}
func (m *VerifyReply) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyReply.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyReply proto.InternalMessageInfo

func (m *VerifyReply) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func init() {
	proto.RegisterType((*MerkleHash)(nil), "zksnark.MerkleHash")
	proto.RegisterType((*MerklePath)(nil), "zksnark.MerklePath")
	proto.RegisterType((*Note)(nil), "zksnark.Note")
	proto.RegisterType((*JSInput)(nil), "zksnark.JSInput")
	proto.RegisterType((*ProveRequest)(nil), "zksnark.ProveRequest")
	proto.RegisterType((*PHGRProof)(nil), "zksnark.PHGRProof")
	proto.RegisterType((*ProveReply)(nil), "zksnark.ProveReply")
	proto.RegisterType((*VerifyRequest)(nil), "zksnark.VerifyRequest")
	proto.RegisterType((*VerifyReply)(nil), "zksnark.VerifyReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ZksnarkClient is the client API for Zksnark service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ZksnarkClient interface {
	Prove(ctx context.Context, in *ProveRequest, opts ...grpc.CallOption) (*ProveReply, error)
	Verify(ctx context.Context, in *VerifyRequest, opts ...grpc.CallOption) (*VerifyReply, error)
}

type zksnarkClient struct {
	cc *grpc.ClientConn
}

func NewZksnarkClient(cc *grpc.ClientConn) ZksnarkClient {
	return &zksnarkClient{cc}
}

func (c *zksnarkClient) Prove(ctx context.Context, in *ProveRequest, opts ...grpc.CallOption) (*ProveReply, error) {
	out := new(ProveReply)
	err := c.cc.Invoke(ctx, "/zksnark.Zksnark/Prove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zksnarkClient) Verify(ctx context.Context, in *VerifyRequest, opts ...grpc.CallOption) (*VerifyReply, error) {
	out := new(VerifyReply)
	err := c.cc.Invoke(ctx, "/zksnark.Zksnark/Verify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ZksnarkServer is the server API for Zksnark service.
type ZksnarkServer interface {
	Prove(context.Context, *ProveRequest) (*ProveReply, error)
	Verify(context.Context, *VerifyRequest) (*VerifyReply, error)
}

func RegisterZksnarkServer(s *grpc.Server, srv ZksnarkServer) {
	s.RegisterService(&_Zksnark_serviceDesc, srv)
}

func _Zksnark_Prove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZksnarkServer).Prove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zksnark.Zksnark/Prove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZksnarkServer).Prove(ctx, req.(*ProveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Zksnark_Verify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZksnarkServer).Verify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zksnark.Zksnark/Verify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZksnarkServer).Verify(ctx, req.(*VerifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Zksnark_serviceDesc = grpc.ServiceDesc{
	ServiceName: "zksnark.Zksnark",
	HandlerType: (*ZksnarkServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Prove",
			Handler:    _Zksnark_Prove_Handler,
		},
		{
			MethodName: "Verify",
			Handler:    _Zksnark_Verify_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "zksnark.proto",
}

func init() { proto.RegisterFile("zksnark.proto", fileDescriptor_zksnark_90fd8aeebdcddbe0) }

var fileDescriptor_zksnark_90fd8aeebdcddbe0 = []byte{
	// 565 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xcd, 0x6e, 0xd3, 0x4c,
	0x14, 0xfd, 0xfc, 0x93, 0x38, 0xbd, 0x49, 0x3f, 0xaa, 0x69, 0x41, 0xa3, 0x2e, 0x90, 0x31, 0x1b,
	0xb3, 0x29, 0x52, 0x50, 0x11, 0xdb, 0x24, 0x0b, 0x02, 0x11, 0x28, 0x9a, 0x4a, 0x2c, 0xd8, 0x44,
	0x26, 0x99, 0xd8, 0xa3, 0x38, 0xb6, 0x99, 0x19, 0x17, 0xd2, 0x3d, 0xcf, 0x80, 0x78, 0x0f, 0x1e,
	0x10, 0xcd, 0x8f, 0x1d, 0x43, 0x59, 0xb0, 0x9b, 0x73, 0xee, 0x99, 0x7b, 0xcf, 0x3d, 0xe3, 0x04,
	0x4e, 0xef, 0x76, 0xa2, 0x48, 0xf8, 0xee, 0xaa, 0xe2, 0xa5, 0x2c, 0x51, 0x60, 0x61, 0x14, 0x02,
	0xbc, 0xa3, 0x7c, 0x97, 0xd3, 0x79, 0x22, 0x32, 0x84, 0xc0, 0xcf, 0x12, 0x91, 0x61, 0x27, 0x74,
	0xe2, 0x11, 0xd1, 0xe7, 0xe8, 0xa6, 0x51, 0x2c, 0x13, 0x99, 0xa1, 0xe7, 0x30, 0x48, 0x6a, 0x99,
	0xa9, 0x33, 0x76, 0x42, 0x2f, 0x1e, 0x8e, 0xcf, 0xaf, 0x9a, 0xd6, 0xc7, 0x46, 0xa4, 0x15, 0xa1,
	0x0b, 0xe8, 0xb1, 0x62, 0x43, 0xbf, 0x62, 0x37, 0xf4, 0xe2, 0x01, 0x31, 0x20, 0x2a, 0xc0, 0x7f,
	0x5f, 0x4a, 0xaa, 0xaa, 0xb7, 0x49, 0x5e, 0x53, 0x3d, 0xd1, 0x27, 0x06, 0xa0, 0xff, 0xc1, 0x5d,
	0xef, 0xb1, 0xab, 0x4d, 0xb8, 0xeb, 0x3d, 0x1a, 0x81, 0xc3, 0xb1, 0xa7, 0xa1, 0xc3, 0xd1, 0x19,
	0x78, 0x3c, 0x2b, 0xb1, 0xaf, 0xb1, 0x3a, 0x2a, 0x26, 0xa9, 0x76, 0xb8, 0x67, 0x98, 0xa4, 0xda,
	0xa9, 0x0e, 0xc5, 0x16, 0xf7, 0x4d, 0x87, 0x62, 0x1b, 0x7d, 0x73, 0x20, 0x78, 0x7b, 0xf3, 0xa6,
	0xa8, 0x6a, 0x89, 0xae, 0x61, 0xf8, 0x85, 0xc9, 0x82, 0x0a, 0x61, 0xb7, 0x70, 0xfe, 0xb2, 0x85,
	0x2a, 0x91, 0xae, 0x0e, 0x85, 0x30, 0x14, 0x15, 0x2d, 0x36, 0xac, 0x48, 0x17, 0xf4, 0x60, 0xdd,
	0x75, 0x29, 0xf4, 0x04, 0xfc, 0xa2, 0x94, 0x54, 0x3b, 0x1d, 0x8e, 0x4f, 0xdb, 0x8e, 0x6a, 0x53,
	0xa2, 0x4b, 0xd1, 0x0f, 0x07, 0x46, 0x4b, 0x5e, 0xde, 0x52, 0x42, 0x3f, 0xd7, 0x54, 0x48, 0x14,
	0x43, 0x9f, 0x29, 0x57, 0xc2, 0xa6, 0x79, 0xd6, 0xde, 0xb2, 0x76, 0x89, 0xad, 0xa3, 0x67, 0x30,
	0x28, 0x6b, 0xa9, 0x7a, 0x09, 0x9d, 0xe5, 0xbd, 0x09, 0x6d, 0x59, 0x3f, 0xa3, 0x60, 0xa9, 0x8d,
	0x4c, 0x9f, 0x55, 0x46, 0x55, 0xc6, 0x9a, 0xd4, 0xaa, 0x8c, 0xa9, 0x8c, 0xb8, 0xb4, 0xa1, 0xb9,
	0x5c, 0x46, 0x3f, 0x1d, 0x38, 0x59, 0xce, 0x5f, 0x93, 0x25, 0x2f, 0xcb, 0x2d, 0x7a, 0x00, 0x5e,
	0xba, 0x9a, 0xd8, 0x2f, 0xc1, 0x4d, 0x27, 0xe8, 0x12, 0x4e, 0xd2, 0xd5, 0x64, 0x55, 0x71, 0xb6,
	0xa7, 0x76, 0xfb, 0x20, 0x9d, 0x2c, 0x15, 0x34, 0xe2, 0xa9, 0x9d, 0xe7, 0xa6, 0x53, 0x23, 0x9e,
	0x5a, 0xb1, 0x6f, 0xc5, 0xd3, 0x8e, 0x78, 0xd6, 0x0c, 0x4e, 0x67, 0x46, 0x3c, 0xb3, 0xe2, 0xbe,
	0x15, 0xcf, 0x3a, 0xe2, 0x05, 0x0e, 0xac, 0x78, 0x61, 0x88, 0x39, 0x1e, 0x58, 0x62, 0x1e, 0xbd,
	0x04, 0xb0, 0x89, 0x56, 0xf9, 0x01, 0xc5, 0xd0, 0xab, 0x94, 0x7f, 0xfb, 0xac, 0xa8, 0x8d, 0xa8,
	0xdd, 0x8c, 0x18, 0x41, 0xf4, 0xdd, 0x81, 0xd3, 0x0f, 0x94, 0xb3, 0xed, 0xe1, 0xf8, 0x16, 0xff,
	0x78, 0xb7, 0x0d, 0xd8, 0xed, 0x04, 0x6c, 0xe2, 0xf4, 0x9a, 0x38, 0xd1, 0x63, 0x80, 0xa2, 0xce,
	0x73, 0xb6, 0x65, 0x94, 0x0b, 0xec, 0x87, 0x5e, 0x3c, 0x22, 0x1d, 0x06, 0x61, 0x08, 0xd6, 0xe5,
	0x7e, 0xcf, 0xa4, 0xc0, 0x3d, 0x5d, 0x6c, 0x60, 0xf4, 0x14, 0x86, 0x8d, 0x31, 0xb5, 0x92, 0xf9,
	0x8d, 0xb0, 0x8d, 0xb6, 0x35, 0x20, 0x06, 0x8c, 0xef, 0x20, 0xf8, 0x68, 0xec, 0xa1, 0x6b, 0xe8,
	0xe9, 0x04, 0xd0, 0xc3, 0xa3, 0xe3, 0xce, 0x37, 0x76, 0x79, 0xfe, 0x27, 0x5d, 0xe5, 0x87, 0xe8,
	0x3f, 0xf4, 0x0a, 0xfa, 0x66, 0x0c, 0x7a, 0xd4, 0x0a, 0x7e, 0x0b, 0xe4, 0xf2, 0xe2, 0x1e, 0xaf,
	0x6f, 0x7e, 0xea, 0xeb, 0x3f, 0x91, 0x17, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0xbc, 0x94, 0xba,
	0x14, 0x55, 0x04, 0x00, 0x00,
}
