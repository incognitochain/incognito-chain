package main

import (
	"fmt"

	"github.com/incognitochain/incognito-chain/privacy/debugtool"
)

func sendTx(tool *debugtool.DebugTool) {
	b, _ := tool.CreateAndSendTransaction()
	fmt.Println(string(b))
}

func main() {
	privateKeys := []string{"112t8roafGgHL1rhAP9632Yef3sx5k8xgp8cwK4MCJsCL1UWcxXvpzg97N4dwvcD735iKf31Q2ZgrAvKfVjeSUEvnzKJyyJD3GqqSZdxN4or", "112t8rnZDRztVgPjbYQiXS7mJgaTzn66NvHD7Vus2SrhSAY611AzADsPFzKjKQCKWTgbkgYrCPo9atvSMoCf9KT23Sc7Js9RKhzbNJkxpJU6", "112t8rne7fpTVvSgZcSgyFV23FYEv3sbRRJZzPscRcTo8DsdZwstgn6UyHbnKHmyLJrSkvF13fzkZ4e8YD5A2wg8jzUZx6Yscdr4NuUUQDAt", "112t8rnXoBXrThDTACHx2rbEq7nBgrzcZhVZV4fvNEcGJetQ13spZRMuW5ncvsKA1KvtkauZuK2jV8pxEZLpiuHtKX3FkKv2uC5ZeRC8L6we"}
	////paymentKeys := []string{"", "12RuhVZQtGgYmCVzVi49zFZD7gR8SQx8Uuz8oHh6eSZ8PwB2MwaNE6Kkhd6GoykfkRnHNSHz1o2CzMiQBCyFPikHmjvvrZkLERuhcVE", "12RxDSnQVjPojzf7uju6dcgC2zkKkg85muvQh347S76wKSSsKPAqXkvfpSeJzyEH3PREHZZ6SKsXLkDZbs3BSqwEdxqprqih4VzANK9", "12S6m2LpzN17jorYnLb2ApNKaV2EVeZtd6unvrPT1GH8yHGCyjYzKbywweQDZ7aAkhD31gutYAgfQizb2JhJTgBb3AJ8aB4hyppm2ax"}
	//
	tool := new(debugtool.DebugTool).InitLocal()
	//sendTx(tool)
	//
	//fmt.Println("===========================")
	//fmt.Println("Printing output coins after create tx")
	//b, _ := tool.GetListOutputCoins(privateKeys[1])
	//fmt.Println(string(b))

	b, _ := tool.GetBalanceByPrivatekey(privateKeys[0])
	fmt.Println(string(b))

	//b, _ := tool.GetRawMempool()
	//fmt.Println(string(b))
	//
	//tool := new(debugtool.DebugTool).InitLocal()
	//b, _ := tool.GetTransactionByHash("4220d295e906454a5f4e5c7c9eb27ddce9d8ed307b4eb25782a2169dcb25c95c")
	//fmt.Println(string(b))
}

//11
//[161 0 17 98 4 7 232 46 247 220 169 220]

//Encrypting  &{[181 135 82 142 183 130 86 51 110 58 247 178 30 167 165 184 178 42 92 61 39 55 123 220 128 104 110 134 38 62 64 66]}
//[106 240 11 196 189 47 33 179 66 136 148 49 131 141 93 127 185 165 239 80 160 204 15 193 47 83 59 146 57 151 136 4]
//Encrypting  &{[255 164 220 68 85 47 12 166 213 59 197 32 52 65 254 27 188 57 99 99 11 58 33 246 93 56 30 25 1 227 251 41]}
//[173 135 67 215 145 15 92 47 224 99 216 154 60 22 171 124 128 96 79 98 149 198 172 170 158 141 128 132 236 20 5 18]
//Encrypting  &{[155 105 236 71 39 196 140 31 216 37 240 118 191 188 67 162 114 85 96 221 193 246 112 120 106 202 198 217 113 22 50 40]}
//[140 229 127 201 245 214 11 91 94 187 192 29 7 34 9 228 222 79 214 251 181 208 67 38 36 173 72 82 243 166 129 48]
//Encrypting  &{[158 44 85 6 40 38 233 72 56 115 208 32 14 92 94 15 120 39 35 88 89 252 94 100 134 190 216 253 98 129 128 41]}
//[198 185 34 213 202 93 53 191 32 68 194 152 101 174 115 58 174 102 145 239 68 98 143 58 184 66 26 4 124 26 65 30]
//Encrypting  &{[248 68 141 201 2 5 179 57 241 230 215 225 130 184 146 35 132 165 202 145 101 62 105 136 110 145 130 198 89 191 122 158]}
//[151 116 6 221 27 108 30 243 9 208 78 233 159 62 129 19 199 24 54 5 89 60 100 180 205 152 15 55 111 248 131 158]
//Encrypting  &{[223 37 27 183 118 99 75 146 80 185 240 174 234 200 25 95 155 129 169 94 223 242 163 135 120 70 236 194 2 183 4 128]}
//[157 104 183 250 247 17 0 5 197 74 104 38 96 111 177 196 201 24 99 165 172 126 84 213 125 145 50 156 77 110 84 200]
//Encrypting  &{[33 177 126 255 233 113 199 235 170 96 106 213 17 56 46 139 93 43 70 101 224 190 48 207 224 235 162 84 66 103 252 22]}
//[141 59 153 226 126 128 18 127 244 73 162 53 167 17 195 149 233 38 217 23 135 142 39 221 166 43 93 142 84 165 162 93]
//Encrypting  &{[236 40 141 39 158 92 196 171 161 217 23 176 13 17 132 85 159 115 104 11 88 162 143 8 86 176 164 252 93 222 108 10]}
//[45 248 177 164 135 26 28 105 59 125 7 70 120 49 4 101 30 60 8 153 191 132 137 26 23 211 76 232 57 202 90 236]
//Encrypting  &{[88 224 62 164 160 177 93 169 78 88 103 73 105 44 55 183 105 25 227 171 200 70 236 49 255 235 206 89 133 196 123 35]}
//[204 50 156 117 59 221 17 160 27 184 68 199 57 93 104 104 5 234 255 7 203 215 125 198 40 119 85 239 5 180 132 50]
//Encrypting  &{[3 16 218 71 27 165 189 227 30 199 248 65 218 124 232 159 174 35 159 204 40 160 1 28 36 118 167 231 150 36 155 13]}
//[115 61 225 169 108 126 163 14 190 248 72 118 163 72 174 167 126 156 228 113 121 184 158 29 129 86 62 248 104 43 127 174]
//
//Decrypting  &{[88 224 62 164 160 177 93 169 78 88 103 73 105 44 55 183 105 25 227 171 200 70 236 49 255 235 206 89 133 196 123 35]}
//[115 61 225 169 108 126 163 14 190 248 72 118 163 72 174 167 126 156 228 113 121 184 158 29 129 86 62 248 104 43 127 174]
//&{[156 29 94 30 160 226 199 215 147 172 80 235 44 177 242 181 180 214 29 79 179 155 232 157 226 131 156 70 13 60 56 111]}
//&{[88 224 62 164 160 177 93 169 78 88 103 73 105 44 55 183 105 25 227 171 200 70 236 49 255 235 206 89 133 196 123 35]}

