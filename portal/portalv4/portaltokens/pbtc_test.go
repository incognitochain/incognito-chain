package portaltokens

import (
	"encoding/hex"
	"fmt"
	"os"
	"testing"
	"time"

	"github.com/blockcypher/gobcy"
	"github.com/btcsuite/btcd/chaincfg"
	"github.com/btcsuite/btcd/chaincfg/chainhash"
	"github.com/btcsuite/btcd/wire"
	"github.com/btcsuite/btcutil"
	"github.com/incognitochain/incognito-chain/dataaccessobject/statedb"
	btcrelaying "github.com/incognitochain/incognito-chain/relaying/btc"
)

func getBlockCypherAPI(networkName string) gobcy.API {
	//explicitly
	bc := gobcy.API{}
	bc.Token = "a8ed119b4edf4f609a83bd3fbe9a3831"
	bc.Coin = "btc"        //options: "btc","bcy","ltc","doge"
	bc.Chain = networkName //depending on coin: "main","test3","test"
	return bc
}

func buildBTCBlockFromCypher(networkName string, blkHeight int) (*btcutil.Block, error) {
	bc := getBlockCypherAPI(networkName)
	cypherBlock, err := bc.GetBlock(blkHeight, "", nil)
	if err != nil {
		return nil, err
	}
	prevBlkHash, _ := chainhash.NewHashFromStr(cypherBlock.PrevBlock)
	merkleRoot, _ := chainhash.NewHashFromStr(cypherBlock.MerkleRoot)
	msgBlk := wire.MsgBlock{
		Header: wire.BlockHeader{
			Version:    int32(cypherBlock.Ver),
			PrevBlock:  *prevBlkHash,
			MerkleRoot: *merkleRoot,
			Timestamp:  cypherBlock.Time,
			Bits:       uint32(cypherBlock.Bits),
			Nonce:      uint32(cypherBlock.Nonce),
		},
		Transactions: []*wire.MsgTx{},
	}
	blk := btcutil.NewBlock(&msgBlk)
	blk.SetHeight(int32(blkHeight))
	return blk, nil
}

func setGenesisBlockToChainParams(networkName string, genesisBlkHeight int) (*chaincfg.Params, error) {
	blk, err := buildBTCBlockFromCypher(networkName, genesisBlkHeight)
	if err != nil {
		return nil, err
	}

	// chainParams := chaincfg.MainNetParams
	chainParams := chaincfg.TestNet3Params
	chainParams.GenesisBlock = blk.MsgBlock()
	chainParams.GenesisHash = blk.Hash()
	return &chainParams, nil
}

func tearDownRelayBTCHeadersTest(dbName string, t *testing.T) {
	t.Logf("Tearing down RelayBTCHeadersTest...")
	os.RemoveAll(dbName)
}

func printExtractedUTXOs(isValid bool, utxos []*statedb.UTXO, t *testing.T) {
	t.Logf("Is Valid Proof: %v\n", isValid)
	for idx, utxo := range utxos {
		t.Logf("++ UTXO %v: %v\n", idx, utxo.GetOutputAmount())
	}
}

func testProofFromHeight(proof string, height int, t *testing.T) {
	expectedMultisigAddress := "2MvpFqydTR43TT4emMD84Mzhgd8F6dCow1X"
	networkName := "test3"
	p := &PortalBTCTokenProcessor{}
	p.PortalToken = &PortalToken{}
	shieldingIncAddress := "12S5Lrs1XeQLbqN4ySyKtjAjd2d7sBP2tjFijzmp6avrrkQCNFMpkXm3FPzj2Wcu2ZNqJEmh9JriVuRErVwhuQnLmWSaggobEWsBEci"
	expectedMemo := p.GetExpectedMemoForShielding(shieldingIncAddress)

	genesisBlockHeight := height
	chainParams, err := setGenesisBlockToChainParams(networkName, genesisBlockHeight)
	if err != nil {
		t.Errorf("Could not set genesis block to chain params with err: %v", err)
		return
	}

	dbName := "btc-blocks-test"
	btcChain, err := btcrelaying.GetChainV2(dbName, chainParams, int32(genesisBlockHeight))
	defer tearDownRelayBTCHeadersTest(dbName, t)
	if err != nil {
		t.Errorf("Could not get chain instance with err: %v", err)
		return
	}

	for i := genesisBlockHeight + 1; i <= genesisBlockHeight+10; i++ {
		blk, err := buildBTCBlockFromCypher(networkName, i)
		if err != nil {
			t.Errorf("buildBTCBlockFromCypher fail on block %v: %v\n", i, err)
			return
		}
		isMainChain, isOrphan, err := btcChain.ProcessBlockV2(blk, 0)
		if err != nil {
			t.Errorf("ProcessBlock fail on block %v: %v\n", i, err)
			return
		}
		if isOrphan {
			t.Errorf("ProcessBlock incorrectly returned block %v "+
				"is an orphan\n", i)
			return
		}
		t.Logf("Block %s (%d) is on main chain: %t\n", blk.Hash(), blk.Height(), isMainChain)
		time.Sleep(1 * time.Second)
	}

	t.Logf("Session: best block hash %s and block height %d\n", btcChain.BestSnapshot().Hash.String(), btcChain.BestSnapshot().Height)

	isValid, utxos, err := p.parseAndVerifyProofBTCChain(proof, btcChain, expectedMemo, expectedMultisigAddress)

	if err != nil {
		t.Errorf("Parse proof error %v", err)
		return
	}

	printExtractedUTXOs(isValid, utxos, t)

	btcChain.GetDB().Close()
}

func TestParseAndVerifyProof(t *testing.T) {
	var height int
	var proof string

	// height = 1937581
	// proof = "eyJNZXJrbGVQcm9vZnMiOlt7IlByb29mSGFzaCI6WzM2LDgyLDI4LDUyLDgzLDE3OCwxNywxMzgsMjA1LDkyLDIyNCw4Myw2Myw2MSwxOTEsNTMsMTQ4LDIyNyw4OSwxODcsMjA0LDE3MSwxOCw3OSwyOCwxNDUsMzksMCwyMjMsMjksMTcwLDk3XSwiSXNMZWZ0Ijp0cnVlfSx7IlByb29mSGFzaCI6WzE5NiwxMSwxMiwyNTQsMTg1LDE0NCwxNTgsODgsMTU4LDI1LDQ2LDkxLDE2NCwyMjAsMTA4LDE2NSwxNzcsMjE5LDE5NSwyMDEsMjQ1LDE4OSw1LDQsMTIzLDE2OCw3NSwxNjcsMTQzLDE0NywyNDIsMjMyXSwiSXNMZWZ0IjpmYWxzZX0seyJQcm9vZkhhc2giOlsxMzgsNSwzOSw3NCwyNCw3NSw4MSw2MCwxNjcsNDYsMTg2LDEwNiwxNTAsNDQsMjAwLDIxLDIzOCw0MSwyMzQsMzksMjI1LDkyLDExLDIzNCwxNDAsMTA3LDI0OCwyNDQsMTQ0LDExNiwyMTksMTM2XSwiSXNMZWZ0Ijp0cnVlfSx7IlByb29mSGFzaCI6WzE4MiwxMDYsOTEsMTYxLDE0NSwxMzMsMjQ2LDc1LDIwOSw3NCwxODEsMTgyLDkyLDI1NCw0OSwxOTMsNTEsMjMzLDE1NywxODUsNTQsNzMsNTAsMjQ0LDEwNywzMiwzMSwxODksNDMsNCwxMTIsMTI4XSwiSXNMZWZ0IjpmYWxzZX0seyJQcm9vZkhhc2giOlsxMiwzNSwxODIsMTk3LDE5NiwxODYsMTQzLDE1MSw0MywxMDMsMjU1LDE2LDE2MSwyNDAsMTM5LDE2OCwxNzEsOTgsODYsMTA3LDk3LDIxMiw5MCwxNjUsMTQ5LDYyLDMwLDY1LDc1LDIyOCw2NywxODFdLCJJc0xlZnQiOnRydWV9LHsiUHJvb2ZIYXNoIjpbNDcsMTY0LDYwLDcsODAsMTQsNzQsMTY1LDE5NSwxODYsMTE2LDY0LDExOCwxMDIsMTk1LDEsMTMxLDQ0LDU5LDE3MSwyMDEsMTU3LDc2LDUzLDgyLDksMTM4LDE3OSw5MSw2LDQsNDRdLCJJc0xlZnQiOmZhbHNlfSx7IlByb29mSGFzaCI6WzIzNSwyNDEsMTY4LDM0LDE4MywxNzgsNDEsMjUzLDEwMiwxMzYsMTg2LDg3LDE4OCwyMzQsMzgsMTU4LDExMSwyMjUsMTIyLDIzMCwyMjksNDgsMTgyLDEwNiwyNyw2NSwyMTQsNDIsMTUzLDQyLDMwLDkwXSwiSXNMZWZ0IjpmYWxzZX0seyJQcm9vZkhhc2giOls2LDE4NCwyOCwyNDgsMTcyLDM0LDE0MywyNTEsMTcwLDEzLDIxNyw3OSwyMjcsMTA2LDIxMiw1NSw5MSwyMDMsMTAzLDkwLDkwLDIyLDI0Niw2NSw0OCwyMTMsMjU1LDE5OSwzOCwxMTMsMTkxLDIxXSwiSXNMZWZ0IjpmYWxzZX0seyJQcm9vZkhhc2giOlsyOCwxOTQsMTQyLDMzLDQzLDg3LDIxLDIzNCwxOSwxOTEsMTYzLDIxMiwyMTcsMjUsNDksMTk5LDIwMywxNzIsMjUsNywxNjEsMTM2LDE2MywzMyw3OSwxODcsNDQsNzEsMTAxLDI5LDE4NSwyNTNdLCJJc0xlZnQiOmZhbHNlfV0sIkJUQ1R4Ijp7IlZlcnNpb24iOjEsIlR4SW4iOlt7IlByZXZpb3VzT3V0UG9pbnQiOnsiSGFzaCI6WzExLDMwLDIxNiwzLDUzLDE3MSwyNTUsMTcsMTEwLDE4NCwxMjYsMTEyLDE2LDE0MSwyMzgsMjIwLDE5NiwxMzEsMTI0LDE5Nyw5MywxOTcsMjAwLDIxMSwxMDIsMTM1LDQ4LDQ0LDEwLDIzMCw1MCwxMjJdLCJJbmRleCI6MH0sIlNpZ25hdHVyZVNjcmlwdCI6IlJ6QkVBaUJHajhPZnBtYzQzRHZyVm5icTlDa0ZhcnBDUzBIWWtUZUNMVUp6YW40UEhRSWdJckxYUUV2WXV4cHJEV3VEemxGQlV6cXlVQXNzOHplc1NIL2JwUVRLRW5jQklRUFBJQk5QVmtqaTl2RjNwbFVySmJxWDVGc1VoVTVQRXlwSzhQNTlxVC9FL0E9PSIsIldpdG5lc3MiOm51bGwsIlNlcXVlbmNlIjo0Mjk0OTY3Mjk1fV0sIlR4T3V0IjpbeyJWYWx1ZSI6MCwiUGtTY3JpcHQiOiJhaXhTVFVwUGJDdG9NMDVGYmxJME5uUmhORkpFZEN0MFRITm1XSEZLYmprMGFFWkllQzlrVG5aMlNWQlJQUT09In0seyJWYWx1ZSI6MjAwLCJQa1NjcmlwdCI6InFSUW5KNmR2OHZvNVhjVWxaS2pyS3F1TS9sSElkb2M9In0seyJWYWx1ZSI6MjI5MjcyLCJQa1NjcmlwdCI6ImRxa1Vndnk2bFFpK0VpUXk5N3VRMmw5MEFVQ21XNGlJckE9PSJ9XSwiTG9ja1RpbWUiOjB9LCJCbG9ja0hhc2giOlsxNzIsMjM2LDE2OCwxMDUsMTM0LDMzLDEzNSwxMzIsMTIsMjI1LDEyMywyMTIsMzksMjQ1LDE1LDE5MywxNDYsMTIzLDEwNSwxMTIsMzYsMTgwLDE4MiwxMDUsNDIsMjA3LDExNSwyMTgsMCwwLDAsMF19"
	// testProofFromHeight(proof, height, t)

	// height = 1937579
	// proof = "eyJNZXJrbGVQcm9vZnMiOlt7IlByb29mSGFzaCI6WzM2LDgyLDI4LDUyLDgzLDE3OCwxNywxMzgsMjA1LDkyLDIyNCw4Myw2Myw2MSwxOTEsNTMsMTQ4LDIyNyw4OSwxODcsMjA0LDE3MSwxOCw3OSwyOCwxNDUsMzksMCwyMjMsMjksMTcwLDk3XSwiSXNMZWZ0Ijp0cnVlfSx7IlByb29mSGFzaCI6WzE5NiwxMSwxMiwyNTQsMTg1LDE0NCwxNTgsODgsMTU4LDI1LDQ2LDkxLDE2NCwyMjAsMTA4LDE2NSwxNzcsMjE5LDE5NSwyMDEsMjQ1LDE4OSw1LDQsMTIzLDE2OCw3NSwxNjcsMTQzLDE0NywyNDIsMjMyXSwiSXNMZWZ0IjpmYWxzZX0seyJQcm9vZkhhc2giOlsxMzgsNSwzOSw3NCwyNCw3NSw4MSw2MCwxNjcsNDYsMTg2LDEwNiwxNTAsNDQsMjAwLDIxLDIzOCw0MSwyMzQsMzksMjI1LDkyLDExLDIzNCwxNDAsMTA3LDI0OCwyNDQsMTQ0LDExNiwyMTksMTM2XSwiSXNMZWZ0Ijp0cnVlfSx7IlByb29mSGFzaCI6WzE4MiwxMDYsOTEsMTYxLDE0NSwxMzMsMjQ2LDc1LDIwOSw3NCwxODEsMTgyLDkyLDI1NCw0OSwxOTMsNTEsMjMzLDE1NywxODUsNTQsNzMsNTAsMjQ0LDEwNywzMiwzMSwxODksNDMsNCwxMTIsMTI4XSwiSXNMZWZ0IjpmYWxzZX0seyJQcm9vZkhhc2giOlsxMiwzNSwxODIsMTk3LDE5NiwxODYsMTQzLDE1MSw0MywxMDMsMjU1LDE2LDE2MSwyNDAsMTM5LDE2OCwxNzEsOTgsODYsMTA3LDk3LDIxMiw5MCwxNjUsMTQ5LDYyLDMwLDY1LDc1LDIyOCw2NywxODFdLCJJc0xlZnQiOnRydWV9LHsiUHJvb2ZIYXNoIjpbNDcsMTY0LDYwLDcsODAsMTQsNzQsMTY1LDE5NSwxODYsMTE2LDY0LDExOCwxMDIsMTk1LDEsMTMxLDQ0LDU5LDE3MSwyMDEsMTU3LDc2LDUzLDgyLDksMTM4LDE3OSw5MSw2LDQsNDRdLCJJc0xlZnQiOmZhbHNlfSx7IlByb29mSGFzaCI6WzIzNSwyNDEsMTY4LDM0LDE4MywxNzgsNDEsMjUzLDEwMiwxMzYsMTg2LDg3LDE4OCwyMzQsMzgsMTU4LDExMSwyMjUsMTIyLDIzMCwyMjksNDgsMTgyLDEwNiwyNyw2NSwyMTQsNDIsMTUzLDQyLDMwLDkwXSwiSXNMZWZ0IjpmYWxzZX0seyJQcm9vZkhhc2giOls2LDE4NCwyOCwyNDgsMTcyLDM0LDE0MywyNTEsMTcwLDEzLDIxNyw3OSwyMjcsMTA2LDIxMiw1NSw5MSwyMDMsMTAzLDkwLDkwLDIyLDI0Niw2NSw0OCwyMTMsMjU1LDE5OSwzOCwxMTMsMTkxLDIxXSwiSXNMZWZ0IjpmYWxzZX0seyJQcm9vZkhhc2giOlsyOCwxOTQsMTQyLDMzLDQzLDg3LDIxLDIzNCwxOSwxOTEsMTYzLDIxMiwyMTcsMjUsNDksMTk5LDIwMywxNzIsMjUsNywxNjEsMTM2LDE2MywzMyw3OSwxODcsNDQsNzEsMTAxLDI5LDE4NSwyNTNdLCJJc0xlZnQiOmZhbHNlfV0sIkJUQ1R4Ijp7IlZlcnNpb24iOjEsIlR4SW4iOlt7IlByZXZpb3VzT3V0UG9pbnQiOnsiSGFzaCI6WzExLDMwLDIxNiwzLDUzLDE3MSwyNTUsMTcsMTEwLDE4NCwxMjYsMTEyLDE2LDE0MSwyMzgsMjIwLDE5NiwxMzEsMTI0LDE5Nyw5MywxOTcsMjAwLDIxMSwxMDIsMTM1LDQ4LDQ0LDEwLDIzMCw1MCwxMjJdLCJJbmRleCI6MH0sIlNpZ25hdHVyZVNjcmlwdCI6IlJ6QkVBaUJHajhPZnBtYzQzRHZyVm5icTlDa0ZhcnBDUzBIWWtUZUNMVUp6YW40UEhRSWdJckxYUUV2WXV4cHJEV3VEemxGQlV6cXlVQXNzOHplc1NIL2JwUVRLRW5jQklRUFBJQk5QVmtqaTl2RjNwbFVySmJxWDVGc1VoVTVQRXlwSzhQNTlxVC9FL0E9PSIsIldpdG5lc3MiOm51bGwsIlNlcXVlbmNlIjo0Mjk0OTY3Mjk1fV0sIlR4T3V0IjpbeyJWYWx1ZSI6MCwiUGtTY3JpcHQiOiJhaXhTVFVwUGJDdG9NMDVGYmxJME5uUmhORkpFZEN0MFRITm1XSEZLYmprMGFFWkllQzlrVG5aMlNWQlJQUT09In0seyJWYWx1ZSI6MjAwLCJQa1NjcmlwdCI6InFSUW5KNmR2OHZvNVhjVWxaS2pyS3F1TS9sSElkb2M9In0seyJWYWx1ZSI6MjI5MjcyLCJQa1NjcmlwdCI6ImRxa1Vndnk2bFFpK0VpUXk5N3VRMmw5MEFVQ21XNGlJckE9PSJ9XSwiTG9ja1RpbWUiOjB9LCJCbG9ja0hhc2giOlsxNzIsMjM2LDE2OCwxMDUsMTM0LDMzLDEzNSwxMzIsMTIsMjI1LDEyMywyMTIsMzksMjQ1LDE1LDE5MywxNDYsMTIzLDEwNSwxMTIsMzYsMTgwLDE4MiwxMDUsNDIsMjA3LDExNSwyMTgsMCwwLDAsMF19"
	// testProofFromHeight(proof, height, t)

	// height = 1937500
	// proof = "eyJNZXJrbGVQcm9vZnMiOlt7IlByb29mSGFzaCI6WzM2LDgyLDI4LDUyLDgzLDE3OCwxNywxMzgsMjA1LDkyLDIyNCw4Myw2Myw2MSwxOTEsNTMsMTQ4LDIyNyw4OSwxODcsMjA0LDE3MSwxOCw3OSwyOCwxNDUsMzksMCwyMjMsMjksMTcwLDk3XSwiSXNMZWZ0Ijp0cnVlfSx7IlByb29mSGFzaCI6WzE5NiwxMSwxMiwyNTQsMTg1LDE0NCwxNTgsODgsMTU4LDI1LDQ2LDkxLDE2NCwyMjAsMTA4LDE2NSwxNzcsMjE5LDE5NSwyMDEsMjQ1LDE4OSw1LDQsMTIzLDE2OCw3NSwxNjcsMTQzLDE0NywyNDIsMjMyXSwiSXNMZWZ0IjpmYWxzZX0seyJQcm9vZkhhc2giOlsxMzgsNSwzOSw3NCwyNCw3NSw4MSw2MCwxNjcsNDYsMTg2LDEwNiwxNTAsNDQsMjAwLDIxLDIzOCw0MSwyMzQsMzksMjI1LDkyLDExLDIzNCwxNDAsMTA3LDI0OCwyNDQsMTQ0LDExNiwyMTksMTM2XSwiSXNMZWZ0Ijp0cnVlfSx7IlByb29mSGFzaCI6WzE4MiwxMDYsOTEsMTYxLDE0NSwxMzMsMjQ2LDc1LDIwOSw3NCwxODEsMTgyLDkyLDI1NCw0OSwxOTMsNTEsMjMzLDE1NywxODUsNTQsNzMsNTAsMjQ0LDEwNywzMiwzMSwxODksNDMsNCwxMTIsMTI4XSwiSXNMZWZ0IjpmYWxzZX0seyJQcm9vZkhhc2giOlsxMiwzNSwxODIsMTk3LDE5NiwxODYsMTQzLDE1MSw0MywxMDMsMjU1LDE2LDE2MSwyNDAsMTM5LDE2OCwxNzEsOTgsODYsMTA3LDk3LDIxMiw5MCwxNjUsMTQ5LDYyLDMwLDY1LDc1LDIyOCw2NywxODFdLCJJc0xlZnQiOnRydWV9LHsiUHJvb2ZIYXNoIjpbNDcsMTY0LDYwLDcsODAsMTQsNzQsMTY1LDE5NSwxODYsMTE2LDY0LDExOCwxMDIsMTk1LDEsMTMxLDQ0LDU5LDE3MSwyMDEsMTU3LDc2LDUzLDgyLDksMTM4LDE3OSw5MSw2LDQsNDRdLCJJc0xlZnQiOmZhbHNlfSx7IlByb29mSGFzaCI6WzIzNSwyNDEsMTY4LDM0LDE4MywxNzgsNDEsMjUzLDEwMiwxMzYsMTg2LDg3LDE4OCwyMzQsMzgsMTU4LDExMSwyMjUsMTIyLDIzMCwyMjksNDgsMTgyLDEwNiwyNyw2NSwyMTQsNDIsMTUzLDQyLDMwLDkwXSwiSXNMZWZ0IjpmYWxzZX0seyJQcm9vZkhhc2giOls2LDE4NCwyOCwyNDgsMTcyLDM0LDE0MywyNTEsMTcwLDEzLDIxNyw3OSwyMjcsMTA2LDIxMiw1NSw5MSwyMDMsMTAzLDkwLDkwLDIyLDI0Niw2NSw0OCwyMTMsMjU1LDE5OSwzOCwxMTMsMTkxLDIxXSwiSXNMZWZ0IjpmYWxzZX0seyJQcm9vZkhhc2giOlsyOCwxOTQsMTQyLDMzLDQzLDg3LDIxLDIzNCwxOSwxOTEsMTYzLDIxMiwyMTcsMjUsNDksMTk5LDIwMywxNzIsMjUsNywxNjEsMTM2LDE2MywzMyw3OSwxODcsNDQsNzEsMTAxLDI5LDE4NSwyNTNdLCJJc0xlZnQiOmZhbHNlfV0sIkJUQ1R4Ijp7IlZlcnNpb24iOjEsIlR4SW4iOlt7IlByZXZpb3VzT3V0UG9pbnQiOnsiSGFzaCI6WzExLDMwLDIxNiwzLDUzLDE3MSwyNTUsMTcsMTEwLDE4NCwxMjYsMTEyLDE2LDE0MSwyMzgsMjIwLDE5NiwxMzEsMTI0LDE5Nyw5MywxOTcsMjAwLDIxMSwxMDIsMTM1LDQ4LDQ0LDEwLDIzMCw1MCwxMjJdLCJJbmRleCI6MH0sIlNpZ25hdHVyZVNjcmlwdCI6IlJ6QkVBaUJHajhPZnBtYzQzRHZyVm5icTlDa0ZhcnBDUzBIWWtUZUNMVUp6YW40UEhRSWdJckxYUUV2WXV4cHJEV3VEemxGQlV6cXlVQXNzOHplc1NIL2JwUVRLRW5jQklRUFBJQk5QVmtqaTl2RjNwbFVySmJxWDVGc1VoVTVQRXlwSzhQNTlxVC9FL0E9PSIsIldpdG5lc3MiOm51bGwsIlNlcXVlbmNlIjo0Mjk0OTY3Mjk1fV0sIlR4T3V0IjpbeyJWYWx1ZSI6MCwiUGtTY3JpcHQiOiJhaXhTVFVwUGJDdG9NMDVGYmxJME5uUmhORkpFZEN0MFRITm1XSEZLYmprMGFFWkllQzlrVG5aMlNWQlJQUT09In0seyJWYWx1ZSI6MjAwLCJQa1NjcmlwdCI6InFSUW5KNmR2OHZvNVhjVWxaS2pyS3F1TS9sSElkb2M9In0seyJWYWx1ZSI6MjI5MjcyLCJQa1NjcmlwdCI6ImRxa1Vndnk2bFFpK0VpUXk5N3VRMmw5MEFVQ21XNGlJckE9PSJ9XSwiTG9ja1RpbWUiOjB9LCJCbG9ja0hhc2giOlsxNzIsMjM2LDE2OCwxMDUsMTM0LDMzLDEzNSwxMzIsMTIsMjI1LDEyMywyMTIsMzksMjQ1LDE1LDE5MywxNDYsMTIzLDEwNSwxMTIsMzYsMTgwLDE4MiwxMDUsNDIsMjA3LDExNSwyMTgsMCwwLDAsMF19"
	// testProofFromHeight(proof, height, t)

	// height = 1937581
	// proof = "eyJNZXJrbGVQcm9vZnMiOlt7IlByb29mSGFzaCI6WzE0MywyMTEsMjI2LDExNiwyNTMsNjksMjQ2LDIyNCwxMTAsMTg0LDMwLDE1Nyw4NCwyMDcsMTQyLDI1MywxMjIsNTAsMTk0LDgsMjAzLDExOSw3NSwxODMsMjUsNjUsMTU1LDIxMywxODYsMTg0LDEyNSwxMF0sIklzTGVmdCI6dHJ1ZX0seyJQcm9vZkhhc2giOls0OCwxODIsMTE2LDI1MCwzOSwxMDgsMTk1LDE0NCwyMSw3OSwyMjIsNzQsMTk3LDE2MSwxMDcsMTYwLDIxLDMwLDIwNiwyNDksMTc5LDExMSwyMjMsMzIsNDcsMTM5LDE1MywyOCwxOTIsMjIwLDE0NiwyNV0sIklzTGVmdCI6dHJ1ZX0seyJQcm9vZkhhc2giOlsxMzgsNSwzOSw3NCwyNCw3NSw4MSw2MCwxNjcsNDYsMTg2LDEwNiwxNTAsNDQsMjAwLDIxLDIzOCw0MSwyMzQsMzksMjI1LDkyLDExLDIzNCwxNDAsMTA3LDI0OCwyNDQsMTQ0LDExNiwyMTksMTM2XSwiSXNMZWZ0Ijp0cnVlfSx7IlByb29mSGFzaCI6WzE4MiwxMDYsOTEsMTYxLDE0NSwxMzMsMjQ2LDc1LDIwOSw3NCwxODEsMTgyLDkyLDI1NCw0OSwxOTMsNTEsMjMzLDE1NywxODUsNTQsNzMsNTAsMjQ0LDEwNywzMiwzMSwxODksNDMsNCwxMTIsMTI4XSwiSXNMZWZ0IjpmYWxzZX0seyJQcm9vZkhhc2giOlsxMiwzNSwxODIsMTk3LDE5NiwxODYsMTQzLDE1MSw0MywxMDMsMjU1LDE2LDE2MSwyNDAsMTM5LDE2OCwxNzEsOTgsODYsMTA3LDk3LDIxMiw5MCwxNjUsMTQ5LDYyLDMwLDY1LDc1LDIyOCw2NywxODFdLCJJc0xlZnQiOnRydWV9LHsiUHJvb2ZIYXNoIjpbNDcsMTY0LDYwLDcsODAsMTQsNzQsMTY1LDE5NSwxODYsMTE2LDY0LDExOCwxMDIsMTk1LDEsMTMxLDQ0LDU5LDE3MSwyMDEsMTU3LDc2LDUzLDgyLDksMTM4LDE3OSw5MSw2LDQsNDRdLCJJc0xlZnQiOmZhbHNlfSx7IlByb29mSGFzaCI6WzIzNSwyNDEsMTY4LDM0LDE4MywxNzgsNDEsMjUzLDEwMiwxMzYsMTg2LDg3LDE4OCwyMzQsMzgsMTU4LDExMSwyMjUsMTIyLDIzMCwyMjksNDgsMTgyLDEwNiwyNyw2NSwyMTQsNDIsMTUzLDQyLDMwLDkwXSwiSXNMZWZ0IjpmYWxzZX0seyJQcm9vZkhhc2giOls2LDE4NCwyOCwyNDgsMTcyLDM0LDE0MywyNTEsMTcwLDEzLDIxNyw3OSwyMjcsMTA2LDIxMiw1NSw5MSwyMDMsMTAzLDkwLDkwLDIyLDI0Niw2NSw0OCwyMTMsMjU1LDE5OSwzOCwxMTMsMTkxLDIxXSwiSXNMZWZ0IjpmYWxzZX0seyJQcm9vZkhhc2giOlsyOCwxOTQsMTQyLDMzLDQzLDg3LDIxLDIzNCwxOSwxOTEsMTYzLDIxMiwyMTcsMjUsNDksMTk5LDIwMywxNzIsMjUsNywxNjEsMTM2LDE2MywzMyw3OSwxODcsNDQsNzEsMTAxLDI5LDE4NSwyNTNdLCJJc0xlZnQiOmZhbHNlfV0sIkJUQ1R4Ijp7IlZlcnNpb24iOjEsIlR4SW4iOlt7IlByZXZpb3VzT3V0UG9pbnQiOnsiSGFzaCI6WzE0MywyMTEsMjI2LDExNiwyNTMsNjksMjQ2LDIyNCwxMTAsMTg0LDMwLDE1Nyw4NCwyMDcsMTQyLDI1MywxMjIsNTAsMTk0LDgsMjAzLDExOSw3NSwxODMsMjUsNjUsMTU1LDIxMywxODYsMTg0LDEyNSwxMF0sIkluZGV4IjoyfSwiU2lnbmF0dXJlU2NyaXB0IjoiU0RCRkFpRUE5WS9XeDZvMDh4QjAzZkdya3EyVGQ5NXV5akxiK0ZTRk13cHpWcHdkZTFNQ0lGcWJzdWlWeis5Wnhka05YWmZXQ1p5WHZMdUJrK3Y1KzZzYk1kbGUwSVkvQVNFRHp5QVRUMVpJNHZieGQ2WlZLeVc2bCtSYkZJVk9UeE1xU3ZEK2Zhay94UHc9IiwiV2l0bmVzcyI6bnVsbCwiU2VxdWVuY2UiOjQyOTQ5NjcyOTV9XSwiVHhPdXQiOlt7IlZhbHVlIjowLCJQa1NjcmlwdCI6ImFpeFNUVXBQYkN0b00wNUZibEkwTm5SaE5GSkVkQ3QwVEhObVdIRktiamswYUVaSWVDOWtUbloyU1ZCUlBRPT0ifSx7IlZhbHVlIjo2MDAsIlBrU2NyaXB0IjoicVJRbko2ZHY4dm81WGNVbFpLanJLcXVNL2xISWRvYz0ifSx7IlZhbHVlIjoyMjQzNzIsIlBrU2NyaXB0IjoiZHFrVWd2eTZsUWkrRWlReTk3dVEybDkwQVVDbVc0aUlyQT09In1dLCJMb2NrVGltZSI6MH0sIkJsb2NrSGFzaCI6WzE3MiwyMzYsMTY4LDEwNSwxMzQsMzMsMTM1LDEzMiwxMiwyMjUsMTIzLDIxMiwzOSwyNDUsMTUsMTkzLDE0NiwxMjMsMTA1LDExMiwzNiwxODAsMTgyLDEwNSw0MiwyMDcsMTE1LDIxOCwwLDAsMCwwXX0="
	// testProofFromHeight(proof, height, t)

	height = 1937587
	proof = "eyJNZXJrbGVQcm9vZnMiOlt7IlByb29mSGFzaCI6WzIxNywxMTgsNTgsOTMsMTM1LDIxLDEyLDIxLDIzNyw3MiwxNzgsMTU4LDkzLDIxOSwxMTYsMTMsMTIxLDE3OCwxMzQsMjUsMjM0LDE3OSwxOSwxMjMsMjM5LDIwNSwxNzEsMjMwLDE1OSwyMjYsNjIsMTgxXSwiSXNMZWZ0IjpmYWxzZX0seyJQcm9vZkhhc2giOls1MCwxODgsMTgwLDkwLDUxLDIxNCwxOTYsODAsNTksNiwxOTQsNzUsNTYsMjI3LDE5Nyw4NiwxODYsMzYsMTk3LDExMywxODIsNzIsNzYsOTUsOSw0MywxMTAsMjI3LDc3LDE1MiwyNywxMjhdLCJJc0xlZnQiOmZhbHNlfSx7IlByb29mSGFzaCI6WzEyMywyNCwxOTUsNzIsMTU1LDE5MSwyMDMsNTEsMTU3LDQ3LDE4NCw3NCwxMTAsNjIsOTksMjA1LDEwMCwxMDksNDAsMTY2LDQwLDUsMTgwLDkxLDEyMiw5MywxOTIsNDgsMTMzLDIxNSw1NCwyMzFdLCJJc0xlZnQiOmZhbHNlfSx7IlByb29mSGFzaCI6WzExNSw4LDI0Nyw3LDI1NSwxNDMsNjUsNzcsMywxODEsMTMzLDI3LDE1MSwyMDksMTk0LDE5OSwxNDIsMjMwLDI1LDE1NCwxOCwxNTEsMTI4LDIzMiwxNDQsMjEzLDEsMTk5LDEzMSwyMDgsNDYsMjAzXSwiSXNMZWZ0IjpmYWxzZX0seyJQcm9vZkhhc2giOlsxOTUsMTkzLDM2LDQyLDE3MSwxNTUsMTM4LDIxMCwxNCw4OCwxMjYsMTI1LDE2NiwxMzMsMTIwLDE5NCw0NSw0OCw4LDE0MSwxNiwxMiwxODAsMyw3NSwxNTIsNjcsMTM4LDMwLDYsMTU0LDc4XSwiSXNMZWZ0IjpmYWxzZX0seyJQcm9vZkhhc2giOlsxNTEsMjA2LDE3OCwyMzksMTE0LDM2LDYwLDE4OSwxNTMsNDYsMTYzLDE4MSwyMDUsNDIsMTg5LDE0MSwzNiw1MSwyMzYsMjI0LDI0OCwxOTYsNTgsMTY0LDE2MSwxMCw3MSwyMjgsMTk2LDI0NywxMDEsMTg5XSwiSXNMZWZ0Ijp0cnVlfSx7IlByb29mSGFzaCI6WzIyOSw2MSwyMTksNTYsMTUxLDIxNCw1LDQ3LDkzLDAsMjEyLDE2OSwxOTYsMTA0LDE3OCwxOTMsNzQsNTEsMzgsMTI0LDE3LDE3MSw3NiwxNjEsMTkwLDQ3LDEwNywyMzcsNDIsMTAzLDQ0LDkzXSwiSXNMZWZ0IjpmYWxzZX0seyJQcm9vZkhhc2giOlsxMjcsMjgsMzcsMjEzLDQ0LDE5MCwxNzYsMjIsMjMwLDEyMSwyNDEsMTc1LDEwMiwxOTAsMTc2LDI0Niw0MCwxMjYsODUsOTksMTAyLDE4MCwyMzYsMTIyLDE4Niw5NCw2NSw3MiwzMyw3OSwxNDIsMjM1XSwiSXNMZWZ0IjpmYWxzZX1dLCJCVENUeCI6eyJWZXJzaW9uIjoxLCJUeEluIjpbeyJQcmV2aW91c091dFBvaW50Ijp7Ikhhc2giOls0NywxMjAsODMsMTgzLDE4MCwxMzcsMjQ5LDIwMiwyMDQsMjQyLDIxOCwyNDksODIsNzksMjM3LDkxLDE1MywxNjMsMTM5LDM2LDE4NywxMzQsOTIsMTM2LDE2NCwxODAsMTQ5LDI0Myw3LDUxLDIzOCwxOTZdLCJJbmRleCI6Mn0sIlNpZ25hdHVyZVNjcmlwdCI6IlJ6QkVBaUFYQ2NwKzAzZmhSU3drVW82WktmNThteW9FbXJjMDQzNkV1aVFmOUs0dFd3SWdERUkxMjZ6TVZpTjR2Y0pWQ29scXNnd0YrRzdSOGQvZTNHTUFDOEFnOVZNQklRUFBJQk5QVmtqaTl2RjNwbFVySmJxWDVGc1VoVTVQRXlwSzhQNTlxVC9FL0E9PSIsIldpdG5lc3MiOm51bGwsIlNlcXVlbmNlIjo0Mjk0OTY3Mjk1fV0sIlR4T3V0IjpbeyJWYWx1ZSI6MCwiUGtTY3JpcHQiOiJhaXgzUkUxNmVXWjRkbGRTWTI5d09HbGpjSGx3U1cwNWIxSlRNa1pNZFhGQllWRnVOMmRQUjB4eVNVOVpQVEU9In0seyJWYWx1ZSI6NDAwLCJQa1NjcmlwdCI6InFSUW5KNmR2OHZvNVhjVWxaS2pyS3F1TS9sSElkb2M9In0seyJWYWx1ZSI6MjE5NTcyLCJQa1NjcmlwdCI6ImRxa1Vndnk2bFFpK0VpUXk5N3VRMmw5MEFVQ21XNGlJckE9PSJ9XSwiTG9ja1RpbWUiOjB9LCJCbG9ja0hhc2giOlsxNTUsMTksNSw4MSwzOSwyMTIsODEsMjMyLDk1LDM5LDE3MiwxMzQsMTQ4LDkwLDIwNiwyNiwyMywxNzYsMTkzLDIxOSw0NCwyNSwyNDIsODgsOCwwLDAsMCwwLDAsMCwwXX0="
	testProofFromHeight(proof, height, t)
}

func TestGenerateMultiSigWalletFromSeeds(t *testing.T) {
	required := 3

	seeds := [][]byte{
		[]byte{0xf1, 0x29, 0xb7, 0xa, 0x46, 0xac, 0x35, 0xc4, 0x17, 0x94, 0x10, 0xf3, 0x52, 0xd7, 0xf5, 0x5c, 0xc5, 0x47, 0xe1, 0xa9, 0x26, 0x1f, 0xe8, 0xed, 0xe7, 0x72, 0x34, 0x4, 0x71, 0xeb, 0xc6, 0x9},
		[]byte{0xca, 0xa8, 0xaa, 0xdf, 0x1e, 0xdb, 0xc5, 0x72, 0x80, 0x8f, 0x8, 0x65, 0x1d, 0x41, 0x85, 0xde, 0xd1, 0x21, 0x5a, 0xd4, 0x7, 0xe6, 0x3c, 0xb4, 0x6f, 0x11, 0xc5, 0x5, 0xc6, 0x16, 0x7e, 0xfe},
		[]byte{0x64, 0x3b, 0x2d, 0xb2, 0x89, 0x5c, 0x53, 0x11, 0x5a, 0xb1, 0x53, 0xd, 0xfd, 0xb3, 0x32, 0xee, 0x1b, 0xe0, 0x7d, 0xcc, 0xd4, 0x3a, 0xd9, 0xf5, 0x62, 0x9b, 0x4c, 0x50, 0x88, 0xa8, 0xad, 0x1a},
		[]byte{0x0, 0xa, 0x43, 0x51, 0xdf, 0x7b, 0x2b, 0x86, 0xc3, 0x40, 0x58, 0xe6, 0x42, 0xa6, 0xc2, 0x5d, 0xb6, 0x6c, 0x30, 0x88, 0x8d, 0xb5, 0x8e, 0xe1, 0x44, 0xce, 0xc0, 0x45, 0xc, 0xf5, 0xa0, 0xeb},
	}
	multiSigScript, privateKeys, multiSigAddr, err := GenerateMultiSigWalletFromSeeds(&chaincfg.TestNet3Params, seeds, required)
	fmt.Printf("multiSigScript: hex encode: %v\n", hex.EncodeToString(multiSigScript))
	fmt.Printf("privateKeys: %v\n", privateKeys)
	fmt.Printf("multiSigAddr: %v\n", multiSigAddr)
	fmt.Printf("err: %v\n", err)
}

